name: Create Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg --output /usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo gpg --dearmor /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo chmod 644 /usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod 644 /etc/apt/sources.list.d/github-cli.list
          sudo apt update
          sudo apt install gh

      - name: Get latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          echo "::set-output name=tag::$(git describe --abbrev=0 --tags)"

      - name: Generate release notes
        id: generate_release_notes
        run: |
          latest_tag=$(echo "${{ steps.get_latest_tag.outputs.tag }}")
          git log --pretty=format:"- %s" $latest_tag..HEAD >> release_notes.md

      - name: Commit release notes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add release_notes.md
          git diff-index --quiet HEAD || git commit -m "Add release notes for version ${{ steps.get_latest_tag.outputs.tag }}"
          git push

      - name: Create Git tag
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          latest_tag=$(echo "${{ steps.get_latest_tag.outputs.tag }}")
          new_tag=$(echo "$latest_tag" | awk -F. -v OFS=. '{$NF = $NF + 1;} 1')
          echo "New tag: $new_tag"
          git tag "$new_tag"
          git push origin "$new_tag"

      - name: Create release on GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v1.2.3 --title "Release $tag" --notes-file release_notes.md
